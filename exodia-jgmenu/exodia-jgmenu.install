## ------------ COLORS ------------ ##

# Reset #
RESET_COLOR='\033[0m' # Text Reset

# Regular Colors #
Black='\033[0;30m'  Red='\033[0;31m'     Green='\033[0;32m'  Yellow='\033[0;33m'
Blue='\033[0;34m'   Purple='\033[0;35m'  Cyan='\033[0;36m'   White='\033[0;37m'

# Bold #
BBlack='\033[1;30m' BRed='\033[1;31m'    BGreen='\033[1;32m' BYellow='\033[1;33m'
BBlue='\033[1;34m'  BPurple='\033[1;35m' BCyan='\033[1;36m'  BWhite='\033[1;37m'

# Underline #
UBlack='\033[4;30m' URed='\033[4;31m'    UGreen='\033[4;32m' UYellow='\033[4;33m'
UBlue='\033[4;34m'  UPurple='\033[4;35m' UCyan='\033[4;36m'  UWhite='\033[4;37m'

# Background #
On_Black='\033[40m' On_Red='\033[41m'    On_Green='\033[42m' On_Yellow='\033[43m'
On_Blue='\033[44m'  On_Purple='\033[45m' On_Cyan='\033[46m'  On_White='\033[47m'

## ------------ GET USER INFO ------------ ##

USER=`echo ${SUDO_USER:-$(whoami)}`
GID=`echo ${SUDO_GID}`
GROUB=`cat /etc/group | grep ${GID} | cut -d: -f1 | head -1`
CONFIG_DIR="/home/${USER}/.config"
BACKUP_DIR="/home/${USER}/.config/exodia-backups"
CONFIG_DIR_SKEL='/etc/skel/.config'
PKG_NAME='exodia-jgmenu'
FILES_NAME='jgmenu'

## ------------ INSTALL CONFIG FILES ------------ ##

# BACKUP FUNCTION #
BACKUP (){

	echo -e ${Green}"\n[*] Creating a backup of your current ${BPurple}${PKG_NAME}${Green} config..." ${RESET_COLOR}
	BACKUP_NAME=`date +%m-%d`
	BACKUP_RANDOM="`echo $RANDOM`"
	echo -e ${BBlue}"   ==> creating backup directory." ${RESET_COLOR}
	mkdir -p ${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM}
	echo -e ${BBlue}"   ==> moving old files to the backup directory." ${RESET_COLOR}
	mv ${CONFIG_DIR}/${FILES_NAME} ${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM}
	echo -e ${BBlue}"   ==> Granting permissions to the ${BPurple}${USER} ${BBlue}user." ${RESET_COLOR}
	chown -R ${USER}:${GROUB} ${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM}
	echo -e ${Green}"[✔] Your current config files are stored in : ${BCyan}${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM} ${Green}." ${RESET_COLOR}

}

# INSTALL FUNCTION #
INSTALL (){

	echo -e ${Green}"\n[*] Copying ${BPurple}${PKG_NAME}${Green} config files into ${BCyan}${CONFIG_DIR}" ${RESET_COLOR}
	echo -e ${BBlue}"   ==> creating config directory." ${RESET_COLOR}
	mkdir -p ${CONFIG_DIR}
	echo -e ${BBlue}"   ==> copying old files to the backup directory." ${RESET_COLOR}
	cp -rf ${CONFIG_DIR_SKEL}/${FILES_NAME} ${CONFIG_DIR}
	echo -e ${BBlue}"   ==> Granting permissions to the ${BPurple}${USER} ${BBlue}user." ${RESET_COLOR}
	chown -R ${USER}:${GROUB} ${CONFIG_DIR}/${FILES_NAME}
	
	if [[ -d "${CONFIG_DIR}/${FILES_NAME}" ]]; then

		echo -e ${BGreen}"[✔] Configuration files installed successfully!\n" ${RESET_COLOR}

	else

		echo -e ${BRed}"[✘] Failed to install configuration files!\n" ${RESET_COLOR}

	fi

}

# MAIN FUNCTION #
RUN_MAIN (){

	if [[ "${GROUB}" == 'liveuser' ]]; 
		then
			exit

	else

		if [[ ! -d "${CONFIG_DIR}/${FILES_NAME}" ]]
			then
				
				INSTALL

		else
				BACKUP
				INSTALL
		fi

	fi

}


post_install() {
	
	RUN_MAIN

}

post_upgrade() {

	RUN_MAIN
		
}

post_remove() {
	
	echo -e ${BRed}"\n[*] Config files for ${BPurple}${FILES_NAME}${BRed} are still available in : ${BCyan}${CONFIG_DIR}/${FILES_NAME}${BRed} directory. If you want to remove them, Do it manually.\n" ${RESET_COLOR}

}
